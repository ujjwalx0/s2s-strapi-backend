name: Deploy Strapi v5 to Oracle Cloud

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: strapi-app
  OCI_SSH_USER: ubuntu
  DATABASE_CA_FILE: ca.pem

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          build-args: |
            NODE_ENV=production
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Oracle Cloud
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.OCI_PUBLIC_IP }}
          username: ${{ env.OCI_SSH_USER }}
          key: ${{ secrets.OCI_SSH_KEY }}
          script: |
            # Check if /home/ubuntu/ca.pem exists and remove it if it's a directory
            if [ -d "/home/ubuntu/ca.pem" ]; then
              echo "Removing existing directory /home/ubuntu/ca.pem"
              rm -rf /home/ubuntu/ca.pem || true
            fi

            # Write the CA certificate to a new location
            echo "${{ secrets.DATABASE_CA_CERT }}" > /home/ubuntu/ca.pem

            # Create the .env file for environment variables
            cat <<EOT > .env
            DATABASE_CLIENT=postgres
            DATABASE_HOST=${{ secrets.DATABASE_HOST }}
            DATABASE_PORT=${{ secrets.DATABASE_PORT }}
            DATABASE_NAME=${{ secrets.DATABASE_NAME }}
            DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
            DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            DATABASE_SSL=true
            DATABASE_SCHEMA=public
            NODE_ENV=production
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}
            APP_KEYS=${{ secrets.APP_KEYS }}
            API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }}
            TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }}
            EOT

            # Docker login
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            # Stop and remove any existing container
            docker stop strapi || true
            docker rm strapi || true

            # Pull the latest Docker image
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest

            # Run the Docker container
            docker run -d \
              --name strapi \
              --restart unless-stopped \
              -p 1337:1337 \
              -v /home/ubuntu/ca.pem:/app/ca.pem \
              --env-file .env \
              ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest

            # Give it a moment to start
            sleep 10
            docker logs strapi --tail 50

            # Clean up
            rm -f .env /home/ubuntu/ca.pem
